//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : AlarmDAOImpl.java
//  @ Date : 2014-07-19
//  @ Author : 
//
//
package com.soloud.per.daoimpl;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowCallbackHandler;

import com.soloud.per.dao.AlarmDeleteDAO;
import com.soloud.per.dao.AlarmInsertDAO;
import com.soloud.per.dao.AlarmSearchDAO;
import com.soloud.per.dao.AlarmUpdateDAO;
import com.soloud.per.dao.BaseDAO;
import com.soloud.per.dto.AlarmDTO;

public class AlarmDAOImpl extends BaseDAO implements AlarmSearchDAO, AlarmInsertDAO, AlarmUpdateDAO, AlarmDeleteDAO
{

	@Override
	public int deleteAlarmCode(String alarmCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		String sql = "DELETE FROM alarm_tb WHERE alarm_code ='" + alarmCode + "'";
		
		int res = jt.update(sql);

		return res;
	}

	@Override
	public int deleteMemberCode(String memberCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		String sql = "DELETE FROM alarm_tb WHERE member_code ='" + memberCode + "'";
		
		int res = jt.update(sql);

		return res;
	}

	@Override
	public int deleteAlarmArrivalDate(String memberCode,
			GregorianCalendar startDate, GregorianCalendar endDate) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
		
		String start= format.format(startDate.getTime()); // 20090529
		

		String end = format.format(endDate.getTime());
		
		String sql = "DELETE FROM alarm_tb WHERE member_code ='" + memberCode + "'"
					+" AND alarm_arrival_date > '" + start
					+"' AND alarm_arrival_date < '" + end +"'";
		
		System.out.println(sql);
		
		int res = jt.update(sql);

		return res;
	}

	@Override
	public int deleteAlarmMemberSenderCode(String memberCode, String senderCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		String sql = "DELETE FROM alarm_tb WHERE member_code ='" + memberCode + "'" 
					+" AND sender_code='" + senderCode + "'";
		
		System.out.println(sql);
		int res = jt.update(sql);

		return res;
	}

	@Override
	public int deleteAlarmMemberIsReadAlarm(String memberCode, String isReadAlarm) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		String sql = "DELETE FROM alarm_tb WHERE member_code ='" + memberCode + "'" 
					+" AND is_read_alarm='" + isReadAlarm + "'";
		
		System.out.println(sql);
		int res = jt.update(sql);

		return res;
	}

	@Override
	public int updateAlarmArrivalDate(String alarmCode,
			GregorianCalendar newArrivalDate) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
		
		String date= format.format(newArrivalDate.getTime()); // 20090529
		
		
		final String sql = "UPDATE alarm_tb" 
		+" SET alarm_arrival_date="
		+"\'" + date + "\'"
		+" WHERE alarm_code="
		+"\'" + alarmCode + "\'";

		int res = jt.update(sql);
		
		return res;
	}

	@Override
	public int updateAlarmIsRead(String alarmCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		final String sql = "UPDATE alarm_tb" 
		+" SET is_read_alarm="
		+"\'" + "read" + "\'"
		+" WHERE alarm_code="
		+"\'" + alarmCode + "\'";

		int res = jt.update(sql);
		
		return res;
	}

	@Override
	public boolean insertAlarm(String alarmKindCode, String memberCode,
			String senderCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		String sql = "INSERT INTO alarm_tb VALUES ("
					+""+ "'a' || alarm_sequence.nextval" + ",'"
					+ alarmKindCode + "',"
					+ "'" + memberCode + "',"
					+ "'" + senderCode + "',"
					+ "sysdate,"
					+ "'noread'" + ")";
		
		System.out.println(sql);
		
		
		int res = jt.update(sql);
		if(res>0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	@Override
	public boolean insertAlarmDTO(AlarmDTO dto) {
		// TODO Auto-generated method stub
		
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMddhhmm");
		
		String date= format.format(dto.getArrivalDate().getTime()); // 
		
		System.out.println(date);
		
		JdbcTemplate jt = getJdbcTemplate();
		String sql = "INSERT INTO alarm_tb VALUES ("
					+"'"+ dto.getAlarmCode() + "','"
					+ dto.getAlarmKindCode() + "',"
					+ "'" + dto.getMemberCode() + "',"
					+ "'" + dto.getSenderCode() + "',"
					+ "sysdate,"
					+ "'" + dto.getIsReadAlarm() +"'" + ")";
		
		System.out.println(sql);
		
		
		int res = jt.update(sql);
		if(res>0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	@Override
	public List<AlarmDTO> searchAllAlarm() {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb";
		
		
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public AlarmDTO searchAlarmCode(String alarmCode) {
		// TODO Auto-generated method stub
		final AlarmDTO temp = new AlarmDTO();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" +
				"WHERE alarm_code = '"+alarmCode+"'" +
						" ORDER BY alarm_arrival_date DESC";
		
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					temp.setAlarmCode(rs.getString("alarm_code"));
					temp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					temp.setArrivalDate(gc);
					temp.setIsReadAlarm(rs.getString("is_read_alarm"));
					temp.setMemberCode(rs.getString("member_code"));
					temp.setSenderCode(rs.getString("sender_code"));					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberCode(String memberCode) {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" ORDER BY alarm_arrival_date DESC";
		
		
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberSenderCode(String memberCode,
			String senderCode) {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" AND sender_code= '" + senderCode + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
		
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberDate(String memberCode,
			GregorianCalendar startDate, GregorianCalendar endDate) {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();
		
		SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
		
		String start= format.format(startDate.getTime()); //
		String end= format.format(endDate.getTime()); // 
		
		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" AND alarm_arrival_date > '" + start+ "'"
					+" AND alarm_arrival_date < '" + end + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
					
		
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
		
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberKindCode(String memberCode,String alarmKindCode) {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" AND alarm_kind_code= '" + alarmKindCode + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberKindSenderCode(String memberCode,String alarmKindCode, String senderCode) {
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" AND alarm_kind_code= '" + alarmKindCode + "'"
					+" AND sender_code= '" + senderCode + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public List<AlarmDTO> searchAlarmMemberCodeIsReadAlram(String memberCode,
			String isReadAlarm) {
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE member_code = '" + memberCode+"'"
					+" AND is_read_alarm= '" + isReadAlarm + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				//System.out.println(rs.getString("alarm_kind_code"));
				// TODO Auto-generated method stub
				while(true)
				{
					//SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
					//String date= format.format(newArrivalDate.getTime()); // 20090529
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}

	@Override
	public int updateAlarmKind(String alarmCode, String alarmKindCode) {
		// TODO Auto-generated method stub
		JdbcTemplate jt = getJdbcTemplate();
		
		
		
		final String sql = "UPDATE alarm_tb" 
		+" SET alarm_kind_code="
		+"\'" + alarmKindCode + "\'"
		+" WHERE alarm_code="
		+"\'" + alarmCode + "\'";

		int res = jt.update(sql);
		
		return res;
	}

	@Override
	public List<AlarmDTO> searchAlarmSenderCodeAlarmKindCode(String senderCode,	String alarmKindCode) {
		// TODO Auto-generated method stub
		final List<AlarmDTO> temp = new ArrayList<AlarmDTO>();

		JdbcTemplate jt = getJdbcTemplate();
		String sql = "SELECT * FROM alarm_tb" 
					+" WHERE sender_code = '" + senderCode+"'"
					+" AND alarm_kind_code= '" + alarmKindCode + "'"
					+" ORDER BY alarm_arrival_date DESC";
					
		jt.query(sql,new RowCallbackHandler() 
		{
			@Override
			public void processRow(ResultSet rs) throws SQLException 
			{
				// TODO Auto-generated method stub
				while(true)
				{
					Date date = rs.getDate("alarm_arrival_date");
					
					long time = date.getTime();
					java.util.Date d = new java.util.Date(time);
					
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(d);
					
					
					AlarmDTO tmp = new AlarmDTO();
					tmp.setAlarmCode(rs.getString("alarm_code"));
					tmp.setAlarmKindCode(rs.getString("alarm_kind_code"));
					tmp.setArrivalDate(gc);
					tmp.setIsReadAlarm(rs.getString("is_read_alarm"));
					tmp.setMemberCode(rs.getString("member_code"));
					tmp.setSenderCode(rs.getString("sender_code"));
					temp.add(tmp);
					
					if(rs.next()==false)
					{
						break;
					}
				}
			}
		});
		return temp;
	}
}
