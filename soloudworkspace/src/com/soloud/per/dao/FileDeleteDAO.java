//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : FileDeleteDAO.java
//  @ Date : 2014-07-19
//  @ Author : 
//
//
package com.soloud.per.dao;//
import java.util.GregorianCalendar;
/**
 * 파일 데이터를 삭제하는 인터페이스
 * @author 장성봉<hr>
 * 파일데이터베이스에서 지정한 데이터를 가지는<br>
 * Record를 삭제하는 인터페이스<br>
 * 이 인터페이스 호출 시 트리거가 작동<br>
 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
 */
public interface FileDeleteDAO
{
	/**
	 * 파일데이터베이스에서 지정한 멤버코드와,파일이름 데이터를 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param memberCode 멤버코드
	 * @param fileName 파일이름
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCodeFileName(String memberCode, String fileName);
	/**
	 * 파일데이터베이스에서 지정한 파일코드 데이터를 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param fileCode 파일코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFileCode(String fileCode);
	/**
	 * 파일데이터베이스에서 지정한 멤버코드데이터를 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param memberCode 멤버코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCode(String memberCode);
	/**
	 * 파일 데이터베이스에서 지정한 폴더코드를 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param folderCode 폴더코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFolderCode(String folderCode);
	/**
	 * 파일 데이터베이스에서 지정한 멤버코드와 기간을 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param memberCode 멤버코드
	 * @param startDate 시작일
	 * @param endDate 마지막일
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCodeLatestModifyDate(String memberCode, GregorianCalendar startDate, GregorianCalendar endDate);
	/**
	 * 파일 데이터베이스에서 지정한 멤버코드와 파일유형을 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param memberCode 멤버코드
	 * @param fileType 파일코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCodeFileType(String memberCode, String fileType);
	/**
	 * 파일데이터베이스에서 지정한 파일유형을 가지는 데이터를 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param fileType 파일유형
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFileType(String fileType);
	
	public int deleteMemberCodeFileCapacity(String memberCode, double startCapacity, double endCapacity);
	/**
	 * 파일데이터베이스에서 지정한 멤버코드와 공유파일여부 데이터를 가지는 Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거가 작동<br>
	 * 접근권한정보를 가진 데이터 베이스에서 같은 파일코드를 가진 데이터를 삭제<br>
	 * 미디어 정보를 가진 데이터베이스에서 같은 파일코드를 가진 데이터 삭제
	 * @param memberCode 멤버코드
	 * @param isSharedFile 공유파일 여부<br>
	 * 공유파일여부 : "공유" 아닌경우 : "일반"
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCodeIsShareFile(String memberCode, String isSharedFile);
}
