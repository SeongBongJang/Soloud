//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : FolderDeleteDAO.java
//  @ Date : 2014-07-19
//  @ Author : 
//
//
package com.soloud.per.dao;
/**
 * 폴더 데이터를 삭제하는 인터페이스
 * @author 장성봉<hr>
 * 폴더 데이터베이스에서 지정한 데이터를 가지는<br>
 * Record를 삭제하는 인터페이스<br>
 * 이 인터페이스 호출 시 트리거 발생<br>
 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
 */
public interface FolderDeleteDAO
{
	/**
	 * 폴더 데이터베이스에서 지정한 폴더코드를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param folderCode 폴더코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFolderCode(String folderCode);	
	/**
	 * 폴더 데이터베이스에서 지정한 멤버코드를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param memberCode 멤버코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteMemberCode(String memberCode);
	/**
	 * 폴더 데이터베이스에서 지정한 부모폴더코드를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param parentFolderCode 부모폴더코드
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteParentFolderCode(String parentFolderCode);
	/**
	 * 폴더 데이터베이스에서 지정한 폴더이름를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param folderName 폴더이름
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFolderName(String folderName);	
	/**
	 * 폴더 데이터베이스에서 지정한 공유폴더여부를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param isSharedFolder 공유폴더여부
	 * 공유파일여부 : "공유" 아닌경우 : "일반"
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteIsSharedFolder(String isSharedFolder);	
	/**
	 * 폴더 데이터베이스에서 지정한 폴더url를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param folderUrl 폴더url
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFolderUrl(String folderUrl);
	/**
	 * 폴더 데이터베이스에서 지정한 멤버코드,폴더이름를 가지는 <br>
	 * Record를 삭제하는 메소드<br>
	 * 이 메소드 호출 시 트리거 발생<br>
	 * 파일정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제<br>
	 * 공유폴더정보를 가지는 데이터베이스에서 삭제할 폴더 코드를 가진 데이터를 삭제
	 * @param memberCode 멤버코드
	 * @param folderName 폴더이름
	 * @return 성공적으로 삭제한 행의 개수
	 */
	public int deleteFolderMemberCode(String memberCode,String folderName);
}
